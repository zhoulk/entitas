//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InterAction.DirectionComponent interActionDirection { get { return (InterAction.DirectionComponent)GetComponent(GameComponentsLookup.InterActionDirection); } }
    public bool hasInterActionDirection { get { return HasComponent(GameComponentsLookup.InterActionDirection); } }

    public void AddInterActionDirection(float newDirection) {
        var index = GameComponentsLookup.InterActionDirection;
        var component = (InterAction.DirectionComponent)CreateComponent(index, typeof(InterAction.DirectionComponent));
        component.direction = newDirection;
        AddComponent(index, component);
    }

    public void ReplaceInterActionDirection(float newDirection) {
        var index = GameComponentsLookup.InterActionDirection;
        var component = (InterAction.DirectionComponent)CreateComponent(index, typeof(InterAction.DirectionComponent));
        component.direction = newDirection;
        ReplaceComponent(index, component);
    }

    public void RemoveInterActionDirection() {
        RemoveComponent(GameComponentsLookup.InterActionDirection);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInterActionDirection;

    public static Entitas.IMatcher<GameEntity> InterActionDirection {
        get {
            if (_matcherInterActionDirection == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InterActionDirection);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInterActionDirection = matcher;
            }

            return _matcherInterActionDirection;
        }
    }
}
