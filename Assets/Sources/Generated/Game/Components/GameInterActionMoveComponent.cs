//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InterAction.MoveComponent interActionMove { get { return (InterAction.MoveComponent)GetComponent(GameComponentsLookup.InterActionMove); } }
    public bool hasInterActionMove { get { return HasComponent(GameComponentsLookup.InterActionMove); } }

    public void AddInterActionMove(UnityEngine.Vector3 newTargetPos) {
        var index = GameComponentsLookup.InterActionMove;
        var component = (InterAction.MoveComponent)CreateComponent(index, typeof(InterAction.MoveComponent));
        component.targetPos = newTargetPos;
        AddComponent(index, component);
    }

    public void ReplaceInterActionMove(UnityEngine.Vector3 newTargetPos) {
        var index = GameComponentsLookup.InterActionMove;
        var component = (InterAction.MoveComponent)CreateComponent(index, typeof(InterAction.MoveComponent));
        component.targetPos = newTargetPos;
        ReplaceComponent(index, component);
    }

    public void RemoveInterActionMove() {
        RemoveComponent(GameComponentsLookup.InterActionMove);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInterActionMove;

    public static Entitas.IMatcher<GameEntity> InterActionMove {
        get {
            if (_matcherInterActionMove == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InterActionMove);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInterActionMove = matcher;
            }

            return _matcherInterActionMove;
        }
    }
}
