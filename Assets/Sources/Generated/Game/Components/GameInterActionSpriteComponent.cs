//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InterAction.SpriteComponent interActionSprite { get { return (InterAction.SpriteComponent)GetComponent(GameComponentsLookup.InterActionSprite); } }
    public bool hasInterActionSprite { get { return HasComponent(GameComponentsLookup.InterActionSprite); } }

    public void AddInterActionSprite(string newSpriteName) {
        var index = GameComponentsLookup.InterActionSprite;
        var component = (InterAction.SpriteComponent)CreateComponent(index, typeof(InterAction.SpriteComponent));
        component.spriteName = newSpriteName;
        AddComponent(index, component);
    }

    public void ReplaceInterActionSprite(string newSpriteName) {
        var index = GameComponentsLookup.InterActionSprite;
        var component = (InterAction.SpriteComponent)CreateComponent(index, typeof(InterAction.SpriteComponent));
        component.spriteName = newSpriteName;
        ReplaceComponent(index, component);
    }

    public void RemoveInterActionSprite() {
        RemoveComponent(GameComponentsLookup.InterActionSprite);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInterActionSprite;

    public static Entitas.IMatcher<GameEntity> InterActionSprite {
        get {
            if (_matcherInterActionSprite == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InterActionSprite);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInterActionSprite = matcher;
            }

            return _matcherInterActionSprite;
        }
    }
}
