//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity interActionMouseEntity { get { return GetGroup(InputMatcher.InterActionMouse).GetSingleEntity(); } }
    public InterAction.MouseComponent interActionMouse { get { return interActionMouseEntity.interActionMouse; } }
    public bool hasInterActionMouse { get { return interActionMouseEntity != null; } }

    public InputEntity SetInterActionMouse(MouseButton newMouse, MouseButtonEvent newMouseEvent) {
        if (hasInterActionMouse) {
            throw new Entitas.EntitasException("Could not set InterActionMouse!\n" + this + " already has an entity with InterAction.MouseComponent!",
                "You should check if the context already has a interActionMouseEntity before setting it or use context.ReplaceInterActionMouse().");
        }
        var entity = CreateEntity();
        entity.AddInterActionMouse(newMouse, newMouseEvent);
        return entity;
    }

    public void ReplaceInterActionMouse(MouseButton newMouse, MouseButtonEvent newMouseEvent) {
        var entity = interActionMouseEntity;
        if (entity == null) {
            entity = SetInterActionMouse(newMouse, newMouseEvent);
        } else {
            entity.ReplaceInterActionMouse(newMouse, newMouseEvent);
        }
    }

    public void RemoveInterActionMouse() {
        interActionMouseEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public InterAction.MouseComponent interActionMouse { get { return (InterAction.MouseComponent)GetComponent(InputComponentsLookup.InterActionMouse); } }
    public bool hasInterActionMouse { get { return HasComponent(InputComponentsLookup.InterActionMouse); } }

    public void AddInterActionMouse(MouseButton newMouse, MouseButtonEvent newMouseEvent) {
        var index = InputComponentsLookup.InterActionMouse;
        var component = (InterAction.MouseComponent)CreateComponent(index, typeof(InterAction.MouseComponent));
        component.mouse = newMouse;
        component.MouseEvent = newMouseEvent;
        AddComponent(index, component);
    }

    public void ReplaceInterActionMouse(MouseButton newMouse, MouseButtonEvent newMouseEvent) {
        var index = InputComponentsLookup.InterActionMouse;
        var component = (InterAction.MouseComponent)CreateComponent(index, typeof(InterAction.MouseComponent));
        component.mouse = newMouse;
        component.MouseEvent = newMouseEvent;
        ReplaceComponent(index, component);
    }

    public void RemoveInterActionMouse() {
        RemoveComponent(InputComponentsLookup.InterActionMouse);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherInterActionMouse;

    public static Entitas.IMatcher<InputEntity> InterActionMouse {
        get {
            if (_matcherInterActionMouse == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.InterActionMouse);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherInterActionMouse = matcher;
            }

            return _matcherInterActionMouse;
        }
    }
}
